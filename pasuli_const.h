#ifndef __PARAMETRIC_SURFACE_CONSTANTS__
#define __PARAMETRIC_SURFACE_CONSTANTS__

#define PASULI_CAT_SURFACES 0
#define PASULI_CAT_CYLINDER 1
#define PASULI_CAT_FRUITS 2
#define PASULI_CAT_SHELLS 3
#define PASULI_CAT_SPHERE 4
#define PASULI_CAT_SPIRAL 5
#define PASULI_CAT_TORUS 6
#define PASULI_CAT_INVALID_TYPE 7
#define PASULI_CATEGORY_COUNT 7

//These constants define unique IDs for surfaces/surface types
enum SurfaceType
{
	NOT_VALID_SURFACE_TYPE = 0,
	// General surfaces
	PASULI_CAT_SURFACES_FIRST,
	PLANE = PASULI_CAT_SURFACES_FIRST,
	AGNESI_CURL,
	ASTROIDAL_ELLIPSOID,
	BALLS_CYLINDROID,
	BELL,
	BELL_POLAR,
	BELL_WAVE,
	BENT_HORNS,
	BICORN_SURFACE,
	BOHEMIAN_DOME_SURFACE,
	BONAN_JEENER_KLEIN_SURFACE,
	BOURS_MINIMAL_SURFACE,
	BOW_CURVE,
	BOWTIE,
	BOYS_SURFACE,
	BOYS_SURFACE2,
	BULLET_NOSE,
	CATALANS_SURFACE,
	CATALANS_SURFACE2,
	CATENOID,
	CAYLEY_SURFACE,
	CONE,
	COSINE_SURFACE,
	COSINE_SURFACE2,
	COSINE_WAVE,
	CRESENT,
	CROSS_CUP,
	CROSS_CUP2,
	CROSS_CUP3,
	CROSSED_TROUGH_SURFACE,
	CROWN,
	CUSPIDAL_BEAKS,
	CUSPIDAL_BUTTERFLY,
	CUSPIDAL_EDGE,
	CUSPIDAL_LIPS,
	DING_DONG_SURFACE,
	DINI_SURFACE,
	DISC,
	DOUBLE_CONE,
	DROP,
	DROP_SURFACE,
	DUPIN_CYCLIDE,
	EGG,
	EGG_SURFACE,
	EIGHT_SURFACE,
	ENNEPER_SURFACE,
	ENNEPER_SURFACE2,
	ENNEPER_SURFACE3,
	ENNEPER_SURFACE_POLAR,
	EPITROCHOIDAL_SURFACE,
	FACING_SNAIL,
	FISH_SURFACE,
	FOLIUM,
	FOUR_INTERSECTING_DISCS,
	FRESNEL,
	FUNNEL,
	GOBLET,
	GUIMARD_SURFACE,
	HANDKERCHIEF,
	HECTOR_GUINARDS_SURFACE,
	HELICOID,
	HENNEBERGS_SURFACE,
	HOLE_DISC,
	HOLE_DISCUS,
	HORN,
	HORNLET_SURFACE,
	HYPERBOLIC_HELICOID,
	HYPERBOLIC_OCTAHEDRON,
	HYPERBOLIC_PARABOLOID,
	HYPERBOLOID,
	ISOLATOR,
	JEENER_KLEIN_SURFACE,
	JET_SURFACE,
	KAI_WING_FUNG_SURFACE1,
	KAI_WING_FUNG_SURFACE2,
	KAPPA_SURFACE,
	KISS_SURFACE,
	KLEIN_BOTTLE_SURFACE,
	KLEIN_BOTTLE_SURFACE2,
	KLEIN_CYCLOID,
	KUENS_SURFACE,
	LAWSON_BOTTLE,
	LEMNISCAPE,
	LOOP,
	MAEDERS_OWL,
	MENNS_SURFACE,
	MILK_BAG,
	MOEBIUS_BAND,
	MOEBIUS_BAND2,
	MOEBIUS_BAND3,
	MONKEY_SADDLE,
	MONKEY_SADDLE2,
	MORIN_SURFACE,
	NEOVIUS_SURFACE,
	PAPER_BAG,
	PARABOLIC_HUMMING_TOP,
	PARABOLOID,
	PEANO_SURFACE,
	PEANO_SURFACE2,
	PILLOW_SHAPE,
	PIRIFORM_SURFACE,
	PISOT_TRIAXIAL,
	PLANAR_ENNEPER_SURFACE,
	PLUECKER_CONOID,
	PLUECKER_CONOID2,
	PSEUDO_CROSS_CAP,
	PSEUDODEVELOPABLE_HELICOID,
	RICHMOND_SURFACE,
	RICHMOND_SURFACE2,
	RICHMOND_SURFACE3,
	ROMAN_SURFACE,
	ROMAN_SURFACE2,
	RULED_ROTOR_CYLINDROID,
	SCHERK_SURFACE,
	SCHERK_SURFACE2,
	SHOE_SURFACE,
	SIEVERT_SURFACE,
	SINE_CONE,
	SINE_CUBE,
	SINE_SURFACE,
	SINE_WAVE,
	SKIDAN_RULED_SURFACE,
	SNAIL2,
	SOUCOUPOID,
	SPINNER,
	SPINNING_TOP1,
	SPINNING_TOP2,
	SPIRAL_WAVE,
	SPRING1,
	SPRING2,
	STEINBACH_SCREW,
	STILETTO_SURFACE,
	SWALLOW_SURFACE,
	TOOTH_SURFACE,
	TRACTROID,
	TRANGULOID_TREFOIL,
	TRASHCAN,
	TREFOIL_KNOTS,
	TREFOIL_KNOTS2,
	TRIAXIAL_HEXATORUS,
	TRIAXIAL_TEARDROP,
	TRIAXIAL_TRITORUS,
	TRIPLE_CORK_SCREW1,
	TRIPLE_CORK_SCREW2,
	TRIPLE_CORK_SCREW3,
	TRIPLE_POINT_TWIST,
	TWISTED_HEART,
	TWISTED_RIBBON,
	TWISTED_PIPE_SURFACE,
	UMBRELLA_SURFACE,
	VASE_HEAD,
	VERRILL_SURFACE,
	VIRICH_CYCLIC_SURFACE,
	WALLIS_CONICAL_SURFACE,
	WAVES,
	WAVY_ENNEPER_SURFACE,
	WHITNEY_UMBRELLA,
	WREATH,
	ZINDLERS_CONOID,
	PASULI_CAT_SURFACES_LAST = ZINDLERS_CONOID,
	// Cylinder
	PASULI_CAT_CYLINDER_FIRST,
	CYLINDER = PASULI_CAT_CYLINDER_FIRST,
	EPIZYKLOID_CYLINDER,
	GAUSS_CYLINDER,
	HYPOZYKLOID_CYLINDER,
	LEMNISKATE_CYLINDER,
	STROPHOIDE_CYLINDER,
	VERSIERA_AGNESI_CYLINDER,
	ZISSOIDE_CYLINDER,
	PASULI_CAT_CYLINDER_LAST = ZISSOIDE_CYLINDER,
	//Fruits
	PASULI_CAT_FRUIT_FIRST,
	APPLE_SURFACE = PASULI_CAT_FRUIT_FIRST,
	APPLE2_SURFACE,
	KIDNEY_SURFACE,
	LEMON_SURFACE,
	PASULI_CAT_FRUIT_LAST = LEMON_SURFACE,
	// Shells & snails
	PASULI_CAT_SHELL_FIRST,
	ASTROCERAS = PASULI_CAT_SHELL_FIRST,
	BELLEROPHINA,
	CORNUCOPIA,
	EUHOPLITES,
	MYA_ARENARIA,
	NATICA_STELLATA,
	NAUTILUS,
	PSEUDOHELICERAS_SUBCATENATUM,
	SEASHELL,
	SNAIL,
	SNAIL_SURFACE,
	SNAILS,
	PASULI_CAT_SHELL_LAST = SNAILS,
	// Spheres
	PASULI_CAT_SPHERE_FIRST,
	ELLIPSOID = PASULI_CAT_SPHERE_FIRST,
	OPEN_SPHERE,
	PSEUDOSPHERE,
	SPHERE,
	SPHERE_V,
	SPHERE_UV,
	TWISTED_SPHERE,
	WAVE_SPHERE,
	WRINKLE_SPHERE,
	WRINKLE_SPHERE2,
	PASULI_CAT_SPHERE_LAST = WRINKLE_SPHERE2,
	// Spirals
	PASULI_CAT_SPIRAL_FIRST,
	ARCHIMEDIC_SPIRAL = PASULI_CAT_SPIRAL_FIRST,
	FERMAT_SPIRAL,
	HYPERBOLIC_SPIRAL,
	LOG_SPIRAL,
	TANH_SPIRAL,
	PASULI_CAT_SPIRAL_LAST = TANH_SPIRAL,
	// Torus
	PASULI_CAT_TORUS_FIRST,
	TORUS = PASULI_CAT_TORUS_FIRST,
	ANTISYMMETRIC_TORUS,
	ASTROID_TORUS,
	BICORN_TORUS_1,
	BICORN_TORUS_2,
	BRAIDED_TORUS,
	CARDIOID_TORUS_1,
	CARDIOID_TORUS_2,
	CASSINIAN_OVAL_TORUS_1,
	CASSINIAN_OVAL_TORUS_2,
	CURLY_TORUS_1,
	CURLY_TORUS_2,
	EIGHT_TORUS,
	ELLIPTIC_TORUS,
	EPIZYKLOID_TORUS_1,
	EPIZYKLOID_TORUS_2,
	GEAR_TORUS,
	GERONO_LEMNISKATE_TORUS_1,
	GERONO_LEMNISKATE_TORUS_2,
	HYPOZYKLOID_TORUS_1,
	HYPOZYKLOID_TORUS_2,
	LEMNISKATE_TORUS_1,
	LEMNISKATE_TORUS_2,
	LIMPET_TORUS,
	NEPHROID_TORUS_1,
	NEPHROID_TORUS_2,
	PIRIFORM_TORUS_1,
	PIRIFORM_TORUS_2,
	SADDLE_TORUS,
	SPIRAL_TORUS,
	STRANGLED_TORUS,
	TORUS_KNOT,
	TRICUSPOID_TORUS_1,
	TRICUSPOID_TORUS_2,
	TWISTED_EIGHT_TORUS,
	UMBILLIC_TORUS,
	WAVE_TORUS,
	PASULI_CAT_TORUS_LAST = WAVE_TORUS,
	//
	LAST_SURFACE_DUMMY_VALUE,
};

#define NUMB_OF_SURFACES LAST_SURFACE_DUMMY_VALUE - 1

#define PASULI_CAT_SURFACES_COUNT \
	(PASULI_CAT_SURFACES_LAST - PASULI_CAT_SURFACES_FIRST)
#define PASULI_CAT_CYLINDER_COUNT \
	(PASULI_CAT_CYLINDER_LAST - PASULI_CAT_CYLINDER_FIRST)
#define PASULI_CAT_FRUIT_COUNT \
	(PASULI_CAT_FRUIT_LAST - PASULI_CAT_FRUIT_FIRST)
#define PASULI_CAT_SHELL_COUNT \
	(PASULI_CAT_SHELL_LAST - PASULI_CAT_SHELL_FIRST)
#define PASULI_CAT_SPHERE_COUNT \
	(PASULI_CAT_SPHERE_LAST - PASULI_CAT_SPHERE_FIRST)
#define PASULI_CAT_SPIRAL_COUNT \
	(PASULI_CAT_SPIRAL_LAST - PASULI_CAT_SPIRAL_FIRST)
#define PASULI_CAT_TORUS_COUNT \
	(PASULI_CAT_TORUS_LAST - PASULI_CAT_TORUS_FIRST)

#define PASULI_SET_AVAILABLE(PSL_FUNC, PSL_DEFDESC, PSL_DESC, PSL_NAME) \
	((PSL_FUNC) | (PSL_DEFDESC << 1) | (PSL_DESC << 2) | (PSL_NAME << 3))

#define PASULI_GET_AVAILABLE(X, OFFSET) (X & (0x1 << OFFSET))


#endif